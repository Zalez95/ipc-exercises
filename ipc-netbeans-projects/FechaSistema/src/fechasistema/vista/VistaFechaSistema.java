package fechasistema.vista;

import fechasistema.modelo.ModeloFechaSistema;
import java.awt.Color;

/**
 * @author Daniel González Alonso
 * @author Daniel Paredes Santamaría
 */
public class VistaFechaSistema extends javax.swing.JFrame {
    private ModeloFechaSistema mimodelo;
    private ControladorFechaSistema micontrolador;
    
    // Constantes para las errores
    private final int ERRORAÑO = 0;
    private final int ERRORMES = 1;
    private final int ERRORDIA = 2;
    private final int ERRORHORA = 3;
    private final int ERRORMINUTOS = 4;
    
    /**
     * Creates new form VistaFechaSistema
     */
    public VistaFechaSistema (){
        initComponents();
        this.setLocationRelativeTo(null);
        mimodelo = new ModeloFechaSistema();
        micontrolador = new ControladorFechaSistema(this, mimodelo);
        actualiza();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        txt_Dia = new javax.swing.JTextField("", 6);
        txt_Año = new javax.swing.JTextField("", 6);
        combo_Mes = new javax.swing.JComboBox();
        txt_Hora = new javax.swing.JTextField("", 2);
        txt_Minutos = new javax.swing.JTextField("", 2);
        etiq_dosPuntos = new javax.swing.JLabel();
        etiq_Año = new javax.swing.JLabel();
        etiq_Hora = new javax.swing.JLabel();
        etiq_Minutos = new javax.swing.JLabel();
        etiq_Dia = new javax.swing.JLabel();
        etiq_Mes = new javax.swing.JLabel();
        bot_Cambiar = new javax.swing.JButton();
        bot_Salir = new javax.swing.JButton();
        etiq_Mensaje = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Fecha del Sistema");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Fecha Actual", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, java.awt.Color.gray));
        jPanel1.setToolTipText(":)");

        txt_Dia.setToolTipText("Día");
        txt_Dia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {}
        });

        txt_Año.setToolTipText("Año");
        txt_Año.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {}
        });

        combo_Mes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio",
			"Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));
        combo_Mes.setToolTipText("Mes");
        combo_Mes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {}
        });

        txt_Hora.setFont(new java.awt.Font("Cantarell", 0, 24)); // NOI18N
        txt_Hora.setToolTipText("Hora");
        txt_Hora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {}
        });

        txt_Minutos.setFont(new java.awt.Font("Cantarell", 0, 24)); // NOI18N
        txt_Minutos.setToolTipText("Minutos");
        txt_Minutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {}
        });

        etiq_dosPuntos.setFont(new java.awt.Font("Cantarell", 0, 36)); // NOI18N
        etiq_dosPuntos.setText(":");

        etiq_Año.setText("Año:");

        etiq_Hora.setText("Hora:");

        etiq_Minutos.setText("Minutos:");

        etiq_Dia.setText("Día:");

        etiq_Mes.setText("Mes:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(etiq_Dia)
                .addGap(18, 18, 18)
                .addComponent(txt_Dia, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(etiq_Mes)
                .addGap(18, 18, 18)
                .addComponent(combo_Mes, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(etiq_Año)
                .addGap(18, 18, 18)
                .addComponent(txt_Año, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(etiq_Hora, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_Hora, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(etiq_dosPuntos)
                        .addGap(27, 27, 27)
                        .addComponent(txt_Minutos))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(etiq_Minutos, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txt_Año, txt_Dia});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txt_Hora, txt_Minutos});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiq_Hora)
                    .addComponent(etiq_Minutos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Hora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_Minutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiq_dosPuntos))
                .addGap(57, 57, 57)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Dia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_Mes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_Año, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiq_Año)
                    .addComponent(etiq_Dia)
                    .addComponent(etiq_Mes)))
        );

        bot_Cambiar.setText("Cambiar");
        bot_Cambiar.setToolTipText("Cambia la fecha del sistema");
        bot_Cambiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bot_CambiarActionPerformed(evt);
            }
        });

        bot_Salir.setText("Salir");
        bot_Salir.setToolTipText("Salir del Programa");
        bot_Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bot_SalirActionPerformed(evt);
            }
        });

        etiq_Mensaje.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(etiq_Mensaje, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bot_Cambiar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bot_Salir, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(66, 66, 66))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {bot_Cambiar, bot_Salir});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(etiq_Mensaje)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bot_Salir)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(bot_Cambiar)
                        .addGap(25, 25, 25))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bot_CambiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bot_CambiarActionPerformed
        // TODO add your handling code here:
        micontrolador.cambiar();
    }//GEN-LAST:event_bot_CambiarActionPerformed

    private void bot_SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bot_SalirActionPerformed
        // TODO add your handling code here:
        micontrolador.salir();
    }//GEN-LAST:event_bot_SalirActionPerformed

    /**
     * @return el valor de los Minutos en la vista, si los datos
     * no se pudieron convertir a un numero retornará -1
     */
    public int getMinutos (){
        String texto = txt_Minutos.getText();
        if (checkTipo(texto)) {
            return Integer.parseInt(texto);
        } else {
            return -1;
        }
    }

    /**
     * @return el valor de la Hora en la vista, si los datos
     * no se pudieron convertir a un numero retornará -1
     */
    public int getHora (){
        String texto = txt_Hora.getText();
        if (checkTipo(texto)) {
            return Integer.parseInt(texto);
        } else {
            return -1;
        }
    }
    
    /**
     * @return el valor del Día en la vista, si los datos
     * no se pudieron convertir a un numero retornará -1
     */
    public int getDia (){
        String texto = txt_Dia.getText();
        if (checkTipo(texto)) {
            return Integer.parseInt(texto);
        } else {
            return -1;
        }
    }

    /**
     * @return el valor del Mes en la vista.
     */
    public int getMes (){
        return (combo_Mes.getSelectedIndex());
    }
    
    /**
     * @return  el valor del Año en la vista, si los datos
     * no se pudieron convertir a un numero retornará -1
     */
    public int getAño (){
        String texto = txt_Año.getText();
        if (checkTipo(texto)) {
            return Integer.parseInt(texto);
        } else {
            return -1;
        }
    }
    
    // Método que pone el campo de texto de los Minutos a blanco (color de correcto)
    public void blancoMinutos (){
        txt_Minutos.setBackground(Color.white);
    }
    
    // Método que pone el campo de texto de la Hora a blanco (color de correcto)
    public void blancoHora (){
        txt_Hora.setBackground(Color.white);
    }
    
    // Método que pone el campo de texto del Día a blanco (color de correcto)
    public void blancoDia (){
        txt_Dia.setBackground(Color.white);
    }
    
    // Método que pone el campo de texto del Mes a blanco (color de correcto)
    public void blancoMes (){
        combo_Mes.setBackground(Color.white);
    }
    
    // Método que pone el campo de texto del Año a blanco (color de correcto)
    public void blancoAño (){
        txt_Año.setBackground(Color.white);
    }
    
    // Método que pone el campo de texto de los Minutos a rojo (color de incorrecto)
    public void rojoMinutos (){
        txt_Minutos.setBackground(Color.red);
    }
    
    // Método que pone el campo de texto de la Hora a rojo (color de incorrecto)
    public void rojoHora (){
        txt_Hora.setBackground(Color.red);
    }
    
    // Método que pone el campo de texto del Día a rojo (color de incorrecto)
    public void rojoDia (){
        txt_Dia.setBackground(Color.red);
    }
    
    // Método que pone el campo de texto del Mes a rojo (color de incorrecto)
    public void rojoMes (){
        combo_Mes.setBackground(Color.red);
    }
    
    // Método que pone el campo de texto del Año a rojo (color de incorrecto)
    public void rojoAño (){
        txt_Año.setBackground(Color.red);
    }
    
    // Método que comprueba el texto que se le pasa puede convertirse a entero.
    private boolean checkTipo (String texto){
        try {
            Integer.parseInt(texto);
            return true;
        } catch (NumberFormatException e){
            return false;
        }
    }
    
    /* Método que cambia los colores en el campo o campos en los que haya
     * habido un error, los cuales se saben mediante un array de booleanos.
     */
    public void error (boolean[] errores){
        if (errores[ERRORAÑO]){
            rojoAño();
        } else { blancoAño(); }
        
        if (errores[ERRORMES]){
            rojoMes();
        } else { blancoMes(); }
        
        if (errores[ERRORDIA]){
            rojoDia();
        } else { blancoDia(); }
        
        if (errores[ERRORHORA]){
            rojoHora();
        } else { blancoHora(); }
        
        if (errores[ERRORMINUTOS]){
            rojoMinutos();
        } else { blancoMinutos(); }
        
        etiq_Mensaje.setText("ERROR: compruebe los datos en rojo.");
    }
    
    // Método que actualiza la interfaz con los nuevos datos del modelo
    public void actualiza (){
        txt_Minutos.setText(String.valueOf(mimodelo.getMinutos()));
        txt_Hora.setText(String.valueOf(mimodelo.getHora()));
        txt_Dia.setText(String.valueOf(mimodelo.getDia()));
        combo_Mes.setSelectedIndex(mimodelo.getMes());
        txt_Año.setText(String.valueOf(mimodelo.getAño()));
        // Cambiamos al color de correcto
        blancoMinutos();
        blancoHora();
        blancoDia();
        blancoMes();
        blancoAño();
        
    }
    
    // Metodo que muestra un mensaje si se han cambiados los datos con éxito.
    public void correcto (){
        etiq_Mensaje.setText("Datos cambiados con éxito.");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bot_Cambiar;
    private javax.swing.JButton bot_Salir;
    private javax.swing.JComboBox combo_Mes;
    private javax.swing.JLabel etiq_Año;
    private javax.swing.JLabel etiq_Dia;
    private javax.swing.JLabel etiq_Hora;
    private javax.swing.JLabel etiq_Mensaje;
    private javax.swing.JLabel etiq_Mes;
    private javax.swing.JLabel etiq_Minutos;
    private javax.swing.JLabel etiq_dosPuntos;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JTextField txt_Año;
    private javax.swing.JTextField txt_Dia;
    private javax.swing.JTextField txt_Hora;
    private javax.swing.JTextField txt_Minutos;
    // End of variables declaration//GEN-END:variables
}